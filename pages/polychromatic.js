import axios from 'axios'
import { useState, useEffect } from 'react'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'

export default function Polychromatic() {

    const [image, setImage] = useState([]);
    const [images, setImages] = useState([]);
    const [time, setTime] = useState("loading");
    const [date, setDate] = useState("");
    const [coords, setCoords] = useState({});

    const apiKey = process.env.NEXT_PUBLIC_NASA_API;
    const url = `https://epic.gsfc.nasa.gov/api/natural?api_key=${apiKey}`


    const getPolychromaticData = async () => {
        const res = await axios.get(url)
        const data = await res.data;
        console.log(data)

        const caption = data[0].caption;
        const date = data[0].date.split(" ")[0];
        const date_formatted = date.replaceAll("-", "/");

        let times = [];
        let images = [];

        for (let i = 0; i < data.length; i++) {
            let time = data[i].date.split(" ")[1];
            let coords = data[i].centroid_coordinates;
            let imageGrabbed = data[i].image;
            let image = `https://epic.gsfc.nasa.gov/archive/natural/${date_formatted}/png/${imageGrabbed}.png`

            times.push(time);
            images.push({
                image: image,
                time: time,
                coords: coords
            })
        }

        setDate(date);
        setImages(images);

        setImage(images[0].image);
        setTime(times[0]);
        setCoords([images[0].coords.lat, images[0].coords.lon]);

        console.log(image);
    }

    useEffect(() => {
        getPolychromaticData()
    })

    return (
        <>
            <Head>
                <title>Polychromatic</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <div className={styles.featuredImg}>

                <Image src={image} alt={image} width={200} height={200} />
                <div className={styles.featuredText}>
                    <h1 className={styles.earthTitle}> The Earth</h1>
                    <div>Time: {time}</div>
                    <div>Latitude: {coords[0]}</div>
                    <div>Longitude: {coords[1]}</div>
                </div>

                <table className={styles.table}>
                    <thead>
                        <tr>
                            <th className={styles.th}>Time</th>
                            <th className={styles.th}>Latitude</th>
                            <th className={styles.th}>Longitude</th>
                            <th className={styles.th}>Image</th>
                        </tr>
                    </thead>
                    <tbody>
                        {
                            images.map((e, i) => {
                                return (
                                    <tr key={i}>
                                        <td className={styles.td_time}>{e.time}</td>
                                        <td className={styles.td_lat}>{e.coords.lat}</td>
                                        <td className={styles.td_long}>{e.coords.lon}</td>
                                        <td className={styles.td_img}><Image src={e.image} alt={e.image} width={100} height={100} /></td>
                                        <td className={styles.td}>
                                            <button className={styles.button} onClick={() => {
                                                setImage(e.image)
                                                setTime(e.time)
                                                setCoords([e.coords.lat, e.coords.lon])
                                                console.log(images[i].image);
                                                document.body.scrollIntoView();
                                            }}>View</button>
                                        </td>
                                    </tr>
                                )
                            })
                        }
                    </tbody>
                </table>

            </div>
        </>
    )

}